{"mappings":"YAAA,IAAMA,EAAO,CACTC,MAAOC,SAASC,cAAc,gBAC9BC,KAAMF,SAASC,cAAc,eAC7BE,gBAAiBH,SAASC,cAAc,SAE5CH,EAAKI,KAAKE,aAAa,WAAY,IAEAN,EAA9BC,MAAMM,iBAAiB,SAAS,WAAKC,EAAgBP,O,IAC9BD,EAAvBI,KAAKG,iBAAiB,SAAS,WAAKC,EAAgBJ,M,IAE7B,IAAtBI,EAAkB,CAEpBP,MAAA,WACQQ,KAAKC,WAGTV,EAAKC,MAAMK,aAAa,YAAY,GACAG,KAA/BC,UAAW,EACwDV,EAAnEI,KAAKO,gBAAgB,YAEEF,KAAnBG,WAAaC,aAAY,WAC1B,IAAIC,EAcX,IAAqEC,OAAjEC,KAAKC,MAAsB,SAAhBD,KAAKE,UAAqBC,SAAS,IAAIC,SAAS,EAAG,IAbWpB,EAAjEK,gBAAgBgB,MAAMC,gBAAkB,GAAYP,OAATD,E,GACzD,K,EAGHV,KAAA,WACImB,cAAcd,KAAKG,YACPZ,EAAPI,KAAKE,aAAa,WAAY,IACYN,EAA1CC,MAAMU,gBAAgB,YACOF,KAA7BC,UAAW,C","sources":["src/js/01-color-switcher.js"],"sourcesContent":["const refs = {  // Створюємо обєкт де ключи назва а значення це посилання на тег \n    start: document.querySelector('[data-start]'), // Отримуємо доступ до тегу button з дата атрибутом start\n    stop: document.querySelector('[data-stop]'), // Отримуємо доступ до тегу button з дата атрибутом stop\n    bodyColorChange: document.querySelector('body'), // Отримуємо доступ до тегу body\n}\nrefs.stop.setAttribute('disabled', '');// Задаємо атрибут disabled кнопці stop за замовчуванням \n\nrefs.start.addEventListener('click', ()=>{changeColorBody.start()}); // Додаємо прослуховувач на кнопку start\nrefs.stop.addEventListener('click', ()=>{changeColorBody.stop()}); // Додаємо прослуховувач на кнопку stop\n\nconst changeColorBody = { // Створюємо обєкт з методами start та stop\n    \n    start() { // Методам start запускає метод setInterval\n        if (this.isActive) { // Виконуємо перевірку чи була активна \n            return\n        }\n        refs.start.setAttribute('disabled', true); // Передаємо атрибут disabled кнопці button з дата атрибутом start\n        this.isActive = true; // При запуску присвоюємо значення isActive true для блокування повторного натискання кнопки старт \n        refs.stop.removeAttribute('disabled'); // Видаляємо атрибут disabled з з кнопки stop\n        \n            this.idInterval = setInterval(() => { // Метод setInterval значення id записуємо в змінну idInterval\n                let colorHex = getRandomHexColor(); // Викликаємо функцію що рандомно генерує код кольору в форматі Hex та записуємо в змінну colorHex\n                refs.bodyColorChange.style.backgroundColor = `${colorHex}`; // Передаємо значення кольору в стиль тегу  body\n    }, 1000) // Встановлюємо інтервал в 1 сек \n    },\n\n    stop() { // Методам stop зупиняє метод setInterval\n        clearInterval(this.idInterval); // зупиняє метод setInterval\n        refs.stop.setAttribute('disabled', '');// Задаємо атрибут disabled кнопці stop при коли буде зупиненна функція start \n        refs.start.removeAttribute('disabled'); //Видаляє атрибут disabled кнопки button з дата атрибутом start\n        this.isActive = false;  // Присвоюємо значення isActive false\n    },\n}\n\n function getRandomHexColor() { // Функція генерує код кольору в форматі Hex \n  return `#${Math.floor(Math.random() * 16777215).toString(16).padStart(6, 0)}`;\n }\n\n\n\n"],"names":["$2ec2bf6e450c0fe9$var$refs","start","document","querySelector","stop","bodyColorChange","setAttribute","addEventListener","$2ec2bf6e450c0fe9$var$changeColorBody","this","isActive","removeAttribute","idInterval","setInterval","colorHex","concat","Math","floor","random","toString","padStart","style","backgroundColor","clearInterval"],"version":3,"file":"01-color-switcher.6d0eed11.js.map"}